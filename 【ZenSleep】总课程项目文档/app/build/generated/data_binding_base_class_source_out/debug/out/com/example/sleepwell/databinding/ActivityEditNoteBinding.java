// Generated by view binder compiler. Do not edit!
package com.example.sleepwell.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.sleepwell.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditNoteBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonDone;

  @NonNull
  public final EditText editTextNoteContent;

  @NonNull
  public final TextView textViewDate;

  private ActivityEditNoteBinding(@NonNull LinearLayout rootView, @NonNull Button buttonCancel,
      @NonNull Button buttonDone, @NonNull EditText editTextNoteContent,
      @NonNull TextView textViewDate) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonDone = buttonDone;
    this.editTextNoteContent = editTextNoteContent;
    this.textViewDate = textViewDate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_cancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.button_done;
      Button buttonDone = ViewBindings.findChildViewById(rootView, id);
      if (buttonDone == null) {
        break missingId;
      }

      id = R.id.edit_text_note_content;
      EditText editTextNoteContent = ViewBindings.findChildViewById(rootView, id);
      if (editTextNoteContent == null) {
        break missingId;
      }

      id = R.id.text_view_date;
      TextView textViewDate = ViewBindings.findChildViewById(rootView, id);
      if (textViewDate == null) {
        break missingId;
      }

      return new ActivityEditNoteBinding((LinearLayout) rootView, buttonCancel, buttonDone,
          editTextNoteContent, textViewDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
